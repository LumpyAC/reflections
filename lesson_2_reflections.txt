What happens when you initialize a repository? Why do you need to do it?
git creates a hidden folder with metadata 

How is the staging area different from the working directory and the repository? What value do you think it offers?
staging area is a cache and it lets you organize a commit

How can you use the staging area to make sure you have one commit per logical change?
using git diff -staged you can compare files in your working directory and your staging area

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
if you want to add an experimental feature or any kind of change that would modify the game in a major way using a branch is recommended 
branches help by letting you test out said new feature or change while keeping the working version of your code intact 

How do the diagrams help you visualize the branch structure?
diagrams allow for a better understanding of who git creates branches and how they are linked 
i think git might actually have a type of tree or graph data structure under the hood

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
the result or merging two branches is a union between two sets 
we represent it that way because the merged branch is the new master branch

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
automatic merging is easier and faster but doesn't work when files are in conflict 
manual merging avoids conflicts but it's not as easy or fast as automatic merging